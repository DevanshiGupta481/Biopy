import Bio
from Bio import SeqIO
from Bio.Seq import Seq
from Bio.SeqUtils import gc_fraction
DNA_seq = Seq("ATGCGTGTCACACTTGCTACAATAGCCTGGATGGTTTCTTTTGTCTCCAATTATTCACACACAGCAAATATTTTGCCAGATATCGAAAATGAAGATTTCATCAAAGACTGCGTTCGAATCCATAACAAGTTCCGATCAGAGGTGAAACCAACAGCCAGTGATATGCTATACATGACTTGGGACCCAGCACTAGCCCAAATTGCAAAAGCATGGGCCAGCAATTGCCAGTTTTCACATAATACACGGCTGAAGCCACCCCACAAGCTGCACCCAAACTTCACTTCACTGGGAGAGAACATCTGGACTGGGTCTGTGCCCATTTTTTCTGTGTCTTCCGCCATCACAAACTGGTATGACGAAATCCAGGACTATGACTTCAAGACTCGGATATGCAAAAAAGTCTGTGGCCACTACACTCAGGTTGTTTGGGCAGATAGTTACAAAGTTGGCTGCGCAGTTCAATTTTGCCCTAAAGTTTCTGGCTTTGACGCTCTTTCCAATGGAGCACATTTTATATGCAACTACGGACCAGGAGGGAATTACCCAACTTGGCCATATAAGAGAGGAGCCACCTGCAGTGCCTGCCCCAATAATGACAAGTGTTTGGACAATCTCTGTGTTAACCGACAGCGAGACCAAGTCAAACGTTACTACTCTGTTGTATATCCAGGCTGGCCCATATATCCACGTAACAGATACACTTCTCTCTTTCTCATTGTTAATTCAGTAATTCTAATACTGTCTGTTATAATTACCATTTTGGTACAGCACAAGTACCCTAATTTAGTTCTTTTGGAC")
gc_value = gc_fraction(DNA_seq)
print(gc_value)


#second method
## also plot graph
from Bio.Seq import Seq
#declaring variable to store nucleotide sequence
Nucleotide_seq = Seq("ATGCGTGTCACACTTGCTACAATAGCCTGGATGGTTTCTTTTGTCTCCAATTATTCACACACAGCAAATATTTTGCCAGATATCGAAAATGAAGATTTCATCAAAGACTGCGTTCGAATCCATAACAAGTTCCGATCAGAGGTGAAACCAACAGCCAGTGATATGCTATACATGACTTGGGACCCAGCACTAGCCCAAATTGCAAAAGCATGGGCCAGCAATTGCCAGTTTTCACATAATACACGGCTGAAGCCACCCCACAAGCTGCACCCAAACTTCACTTCACTGGGAGAGAACATCTGGACTGGGTCTGTGCCCATTTTTTCTGTGTCTTCCGCCATCACAAACTGGTATGACGAAATCCAGGACTATGACTTCAAGACTCGGATATGCAAAAAAGTCTGTGGCCACTACACTCAGGTTGTTTGGGCAGATAGTTACAAAGTTGGCTGCGCAGTTCAATTTTGCCCTAAAGTTTCTGGCTTTGACGCTCTTTCCAATGGAGCACATTTTATATGCAACTACGGACCAGGAGGGAATTACCCAACTTGGCCATATAAGAGAGGAGCCACCTGCAGTGCCTGCCCCAATAATGACAAGTGTTTGGACAATCTCTGTGTTAACCGACAGCGAGACCAAGTCAAACGTTACTACTCTGTTGTATATCCAGGCTGGCCCATATATCCACGTAACAGATACACTTCTCTCTTTCTCATTGTTAATTCAGTAATTCTAATACTGTCTGTTATAATTACCATTTTGGTACAGCACAAGTACCCTAATTTAGTTCTTTTGGAC")
Length_of_seq = len(Nucleotide_seq)
print(Length_of_seq)
from matplotlib import pyplot as plt
from Bio.SeqUtils import gc_fraction
GC1 = gc_fraction(Nucleotide_seq[0:100])
GC2 = gc_fraction(Nucleotide_seq[100:200])
GC3 = gc_fraction(Nucleotide_seq[200:300])
GC3 = gc_fraction(Nucleotide_seq[200:300])
GC4 = gc_fraction(Nucleotide_seq[300:400])
GC5 = gc_fraction(Nucleotide_seq[400:500])
GC6 = gc_fraction(Nucleotide_seq[500:600])
GC7 = gc_fraction(Nucleotide_seq[600:700])
GC8 = gc_fraction(Nucleotide_seq[700:798])
Seq1 = "0-100"
Seq2 = "100-200"
Seq3 = "200-300"
Seq4 = "300-400"
Seq5 = "400-500"
Seq6 = "500-600"
Seq7 = "600-700"
Seq8 = "700-798"
GC_Values = [GC1,GC2,GC3,GC4,GC5,GC6,GC7,GC8]
SEQUENCES = [Seq1,Seq2,Seq3,Seq4,Seq5,Seq6,Seq7,Seq8]
from numpy.random import randn
from matplotlib import pyplot as plt
plt.plot(SEQUENCES, GC_Values, color='red', marker='^')
plt.title("SHOWING GC CONTENT OF GLIOMA SEQUENCE")
plt.xlabel("NUCLEOTIDE_SEQUENCE")
plt.ylabel("GC_CONTENT")
plt.show()
